{"id":"G3o6","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/isEmpty.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/isEmpty.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/isEmpty.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":41},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/isEmpty.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.isEmpty=t;var e=require(\"../util/lift\"),r=require(\"./OperatorSubscriber\");function t(){return(0,e.operate)(function(e,t){e.subscribe((0,r.createOperatorSubscriber)(t,function(){t.next(!1),t.complete()},function(){t.next(!0),t.complete()}))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":1,"column":84}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":116}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":126}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":1,"column":150}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":66,"column":16},"generated":{"line":1,"column":159}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":1,"column":163}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":67,"column":9},"generated":{"line":1,"column":170}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":67,"column":17},"generated":{"line":1,"column":172}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":67,"column":17},"generated":{"line":1,"column":174}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":67,"column":17},"generated":{"line":1,"column":183}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":67,"column":18},"generated":{"line":1,"column":192}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":67,"column":26},"generated":{"line":1,"column":194}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":68,"column":4},"generated":{"line":1,"column":197}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":68,"column":11},"generated":{"line":1,"column":199}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":6},"generated":{"line":1,"column":210}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":70,"column":8},"generated":{"line":1,"column":212}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":70,"column":8},"generated":{"line":1,"column":214}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":70,"column":8},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":71,"column":8},"generated":{"line":1,"column":242}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":72,"column":10},"generated":{"line":1,"column":253}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":72,"column":21},"generated":{"line":1,"column":255}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":72,"column":26},"generated":{"line":1,"column":261}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":73,"column":10},"generated":{"line":1,"column":264}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":73,"column":21},"generated":{"line":1,"column":266}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":75,"column":8},"generated":{"line":1,"column":278}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":76,"column":10},"generated":{"line":1,"column":289}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":76,"column":21},"generated":{"line":1,"column":291}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":76,"column":26},"generated":{"line":1,"column":297}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":77,"column":10},"generated":{"line":1,"column":300}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":77,"column":21},"generated":{"line":1,"column":302}}],"sources":{"../../../../src/internal/operators/isEmpty.ts":"import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits `false` if the input Observable emits any values, or emits `true` if the\n * input Observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n *\n * ```ts\n * import { Subject, isEmpty } from 'rxjs';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n *\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n *\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Outputs\n * // 'a'\n * // false\n * // 'b'\n * // 'c'\n * ```\n *\n * Emit `true` for an empty Observable\n *\n * ```ts\n * import { EMPTY, isEmpty } from 'rxjs';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return A function that returns an Observable that emits boolean value\n * indicating whether the source Observable was empty or not.\n */\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          subscriber.next(false);\n          subscriber.complete();\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"db4a373dca6b8df574a7cfe8c08f1d9a","cacheData":{"env":{}}}