{"id":"wKdt","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNextWith.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/onErrorResumeNextWith.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"tslib","loc":{"line":1,"column":38},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNextWith.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/node_modules/tslib/tslib.es6.js"},{"name":"../util/argsOrArgArray","loc":{"line":2,"column":31},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNextWith.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js"},{"name":"../observable/onErrorResumeNext","loc":{"line":3,"column":48},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/onErrorResumeNextWith.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/observable/onErrorResumeNext.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.onErrorResumeNextWith=t,exports.onErrorResumeNext=void 0;var r=require(\"tslib\"),e=require(\"../util/argsOrArgArray\"),o=require(\"../observable/onErrorResumeNext\");function t(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];var u=(0,e.argsOrArgArray)(t);return function(e){return o.onErrorResumeNext.apply(void 0,(0,r.__spreadArray)([e],(0,r.__read)(u)))}}var s=t;exports.onErrorResumeNext=s;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":98}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":100}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":108}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":131}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":133}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":137}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":139}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":147}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":156}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":158}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":166}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":192}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":194}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":202}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":84,"column":6},"generated":{"line":1,"column":237}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":84,"column":16},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":250}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":254}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":260}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":263}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":265}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":267}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":279}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":286}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":290}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":292}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":295}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":1,"column":305}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":8},"generated":{"line":1,"column":308}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":8},"generated":{"line":1,"column":312}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":22},"generated":{"line":1,"column":315}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":37},"generated":{"line":1,"column":317}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":37},"generated":{"line":1,"column":319}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":91,"column":37},"generated":{"line":1,"column":335}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":9},"generated":{"line":1,"column":338}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":9},"generated":{"line":1,"column":345}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":10},"generated":{"line":1,"column":354}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":1,"column":357}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":1,"column":366}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":1,"column":384}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":1,"column":395}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":1,"column":398}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":1,"column":400}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":1,"column":402}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":31},"generated":{"line":1,"column":417}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":32},"generated":{"line":1,"column":418}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":38},"generated":{"line":1,"column":422}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":43},"generated":{"line":1,"column":424}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":43},"generated":{"line":1,"column":426}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":93,"column":43},"generated":{"line":1,"column":434}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":440}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":13},"generated":{"line":1,"column":444}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":33},"generated":{"line":1,"column":446}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":448}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":456}},{"source":"../../../../src/internal/operators/onErrorResumeNextWith.ts","name":null,"original":{"line":99,"column":7},"generated":{"line":1,"column":474}}],"sources":{"../../../../src/internal/operators/onErrorResumeNextWith.ts":"import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { onErrorResumeNext as oERNCreate } from '../observable/onErrorResumeNext';\n\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables, subscribes to next one on error or complete.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { of, onErrorResumeNext, map } from 'rxjs';\n *\n * of(1, 2, 3, 0)\n *   .pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *\n *       return 10 / x;\n *     }),\n *     onErrorResumeNext(of(1, 2, 3))\n *   )\n *   .subscribe({\n *     next: val => console.log(val),\n *     error: err => console.log(err),          // Will never be called.\n *     complete: () => console.log('that\\'s it!')\n *   });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'that's it!'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables passed either directly or as an array.\n * @return A function that returns an Observable that emits values from source\n * Observable, but - if it errors - subscribes to the next passed Observable\n * and so on, until it completes or runs out of Observables.\n */\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  // For some reason, TS 4.1 RC gets the inference wrong here and infers the\n  // result to be `A[number][]` - completely dropping the ObservableInput part\n  // of the type. This makes no sense whatsoever. As a workaround, the type is\n  // asserted explicitly.\n  const nextSources = argsOrArgArray(sources) as unknown as ObservableInputTuple<A>;\n\n  return (source) => oERNCreate(source, ...nextSources);\n}\n\n/**\n * @deprecated Renamed. Use {@link onErrorResumeNextWith} instead. Will be removed in v8.\n */\nexport const onErrorResumeNext = onErrorResumeNextWith;\n"},"lineCount":null}},"error":null,"hash":"cb9465c9f636b40189b939e5e643aa00","cacheData":{"env":{}}}