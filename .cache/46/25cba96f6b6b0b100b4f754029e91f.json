{"id":"aOS7","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/connect.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/connect.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"../Subject","loc":{"line":1,"column":24},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/connect.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/Subject.js"},{"name":"../observable/innerFrom","loc":{"line":2,"column":26},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/connect.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"},{"name":"../util/lift","loc":{"line":3,"column":24},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/connect.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/lift.js"},{"name":"../observable/fromSubscribable","loc":{"line":4,"column":33},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/connect.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/observable/fromSubscribable.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.connect=u;var e=require(\"../Subject\"),r=require(\"../observable/innerFrom\"),n=require(\"../util/lift\"),o=require(\"../observable/fromSubscribable\"),t={connector:function(){return new e.Subject}};function u(e,u){void 0===u&&(u=t);var i=u.connector;return(0,n.operate)(function(n,t){var u=i();(0,r.innerFrom)(e((0,o.fromSubscribable)(u))).subscribe(t),t.add(n.subscribe(u))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":109,"column":1},"generated":{"line":1,"column":84}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":114}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":116}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":124}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":151}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":153}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":161}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":177}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":179}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":187}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":22,"column":47},"generated":{"line":1,"column":223}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":224}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":23,"column":13},"generated":{"line":1,"column":234}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":23,"column":19},"generated":{"line":1,"column":245}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":23,"column":19},"generated":{"line":1,"column":252}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":23,"column":23},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":23,"column":19},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":99,"column":6},"generated":{"line":1,"column":268}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":99,"column":16},"generated":{"line":1,"column":277}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":100,"column":2},"generated":{"line":1,"column":279}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":101,"column":2},"generated":{"line":1,"column":281}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":101,"column":2},"generated":{"line":1,"column":289}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":101,"column":2},"generated":{"line":1,"column":293}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":101,"column":2},"generated":{"line":1,"column":297}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":101,"column":2},"generated":{"line":1,"column":299}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":103,"column":10},"generated":{"line":1,"column":302}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":103,"column":10},"generated":{"line":1,"column":306}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":103,"column":24},"generated":{"line":1,"column":308}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":103,"column":30},"generated":{"line":1,"column":310}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":9},"generated":{"line":1,"column":320}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":9},"generated":{"line":1,"column":327}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":17},"generated":{"line":1,"column":329}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":17},"generated":{"line":1,"column":331}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":17},"generated":{"line":1,"column":340}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":18},"generated":{"line":1,"column":349}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":104,"column":26},"generated":{"line":1,"column":351}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":105,"column":10},"generated":{"line":1,"column":354}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":105,"column":10},"generated":{"line":1,"column":358}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":105,"column":20},"generated":{"line":1,"column":360}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":106,"column":14},"generated":{"line":1,"column":365}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":106,"column":14},"generated":{"line":1,"column":367}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":106,"column":14},"generated":{"line":1,"column":369}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":106,"column":14},"generated":{"line":1,"column":380}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":106,"column":23},"generated":{"line":1,"column":383}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":106,"column":40},"generated":{"line":1,"column":385}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":106,"column":40},"generated":{"line":1,"column":387}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":106,"column":40},"generated":{"line":1,"column":405}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":106,"column":51},"generated":{"line":1,"column":410}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":106,"column":61},"generated":{"line":1,"column":420}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":1,"column":423}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":15},"generated":{"line":1,"column":425}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":19},"generated":{"line":1,"column":429}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":26},"generated":{"line":1,"column":431}},{"source":"../../../../src/internal/operators/connect.ts","name":null,"original":{"line":107,"column":36},"generated":{"line":1,"column":441}}],"sources":{"../../../../src/internal/operators/connect.ts":"import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\n/**\n * An object used to configure {@link connect} operator.\n */\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default, this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ## Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\n *\n * const source$ = of(1, 2, 3, 4, 5).pipe(\n *   tap({\n *     subscribe: () => console.log('subscription started'),\n *     next: n => console.log(`source emitted ${ n }`)\n *   })\n * );\n *\n * source$.pipe(\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\n *   connect(shared$ => merge(\n *     shared$.pipe(map(n => `all ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\n *   ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * 'subscription started'\n * 'source emitted 1'\n * 'all 1'\n * 'odd 1'\n * 'source emitted 2'\n * 'all 2'\n * 'even 2'\n * 'source emitted 3'\n * 'all 3'\n * 'odd 3'\n * 'source emitted 4'\n * 'all 4'\n * 'even 4'\n * 'source emitted 5'\n * 'all 5'\n * 'odd 5'\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"319d5d69a3f409e4da1b2129de21ba63","cacheData":{"env":{}}}