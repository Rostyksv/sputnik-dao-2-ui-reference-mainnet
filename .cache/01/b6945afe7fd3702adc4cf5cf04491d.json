{"id":"qCL4","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/mapTo.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/mapTo.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"./map","loc":{"line":1,"column":20},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/mapTo.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/map.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.mapTo=r;var e=require(\"./map\");function r(r){return(0,e.map)(function(){return r})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":1,"column":82}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":84}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":1,"column":107}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":46,"column":16},"generated":{"line":1,"column":116}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":46,"column":25},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":1,"column":121}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":1,"column":128}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":1,"column":130}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":1,"column":132}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":47,"column":13},"generated":{"line":1,"column":137}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":47,"column":19},"generated":{"line":1,"column":148}},{"source":"../../../../src/internal/operators/mapTo.ts","name":null,"original":{"line":47,"column":19},"generated":{"line":1,"column":155}}],"sources":{"../../../../src/internal/operators/mapTo.ts":"import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n"},"lineCount":null}},"error":null,"hash":"1ee006b51a184831a42ee90b7e790a1c","cacheData":{"env":{}}}