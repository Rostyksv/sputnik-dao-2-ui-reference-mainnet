{"id":"uDXP","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/tap.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/tap.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"../util/isFunction","loc":{"line":1,"column":27},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/tap.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/isFunction.js"},{"name":"../util/lift","loc":{"line":2,"column":24},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/tap.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/lift.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":41},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/tap.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"},{"name":"../util/identity","loc":{"line":4,"column":25},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/tap.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/identity.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.tap=t;var e=require(\"../util/isFunction\"),r=require(\"../util/lift\"),i=require(\"./OperatorSubscriber\"),l=require(\"../util/identity\");function t(t,n,u){var o=(0,e.isFunction)(t)||n||u?{next:t,error:n,complete:u}:t;return o?(0,r.operate)(function(e,r){var l;null===(l=o.subscribe)||void 0===l||l.call(o);var t=!0;e.subscribe((0,i.createOperatorSubscriber)(r,function(e){var i;null===(i=o.next)||void 0===i||i.call(o,e),r.next(e)},function(){var e;t=!1,null===(e=o.complete)||void 0===e||e.call(o),r.complete()},function(e){var i;t=!1,null===(i=o.error)||void 0===i||i.call(o,e),r.error(e)},function(){var e,r;t&&(null===(e=o.unsubscribe)||void 0===e||e.call(o)),null===(r=o.finalize)||void 0===r||r.call(o)}))}):l.identity}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":80}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":82}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":128}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":144}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":146}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":154}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":178}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":180}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":188}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":167,"column":6},"generated":{"line":1,"column":208}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":167,"column":16},"generated":{"line":1,"column":217}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":168,"column":2},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":169,"column":2},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":170,"column":2},"generated":{"line":1,"column":223}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":175,"column":8},"generated":{"line":1,"column":226}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":175,"column":8},"generated":{"line":1,"column":230}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":176,"column":4},"generated":{"line":1,"column":233}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":176,"column":15},"generated":{"line":1,"column":235}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":176,"column":15},"generated":{"line":1,"column":237}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":176,"column":15},"generated":{"line":1,"column":249}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":176,"column":34},"generated":{"line":1,"column":253}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":176,"column":43},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":178,"column":9},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":178,"column":11},"generated":{"line":1,"column":259}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":178,"column":17},"generated":{"line":1,"column":264}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":178,"column":92},"generated":{"line":1,"column":266}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":178,"column":97},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":178,"column":99},"generated":{"line":1,"column":274}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":178,"column":107},"generated":{"line":1,"column":283}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":179,"column":8},"generated":{"line":1,"column":286}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":181,"column":9},"generated":{"line":1,"column":288}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":181,"column":9},"generated":{"line":1,"column":295}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":182,"column":6},"generated":{"line":1,"column":298}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":182,"column":14},"generated":{"line":1,"column":300}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":182,"column":14},"generated":{"line":1,"column":302}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":182,"column":14},"generated":{"line":1,"column":311}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":182,"column":15},"generated":{"line":1,"column":320}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":182,"column":23},"generated":{"line":1,"column":322}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":325}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":329}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":183,"column":29},"generated":{"line":1,"column":331}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":183,"column":8},"generated":{"line":1,"column":339}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":183,"column":8},"generated":{"line":1,"column":341}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":183,"column":20},"generated":{"line":1,"column":343}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":183,"column":29},"generated":{"line":1,"column":360}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":183,"column":29},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":183,"column":29},"generated":{"line":1,"column":367}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":183,"column":29},"generated":{"line":1,"column":369}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":183,"column":8},"generated":{"line":1,"column":374}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":184,"column":12},"generated":{"line":1,"column":377}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":184,"column":12},"generated":{"line":1,"column":381}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":184,"column":22},"generated":{"line":1,"column":384}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":185,"column":8},"generated":{"line":1,"column":386}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":185,"column":15},"generated":{"line":1,"column":388}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":186,"column":10},"generated":{"line":1,"column":399}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":187,"column":12},"generated":{"line":1,"column":401}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":187,"column":12},"generated":{"line":1,"column":403}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":187,"column":12},"generated":{"line":1,"column":429}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":188,"column":12},"generated":{"line":1,"column":431}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":1,"column":440}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":443}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":447}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":189,"column":30},"generated":{"line":1,"column":449}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":189,"column":14},"generated":{"line":1,"column":457}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":189,"column":14},"generated":{"line":1,"column":459}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":189,"column":26},"generated":{"line":1,"column":461}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":189,"column":30},"generated":{"line":1,"column":473}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":189,"column":30},"generated":{"line":1,"column":477}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":189,"column":30},"generated":{"line":1,"column":480}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":189,"column":30},"generated":{"line":1,"column":482}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":189,"column":14},"generated":{"line":1,"column":487}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":189,"column":33},"generated":{"line":1,"column":489}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":190,"column":14},"generated":{"line":1,"column":492}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":190,"column":25},"generated":{"line":1,"column":494}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":190,"column":30},"generated":{"line":1,"column":499}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":192,"column":12},"generated":{"line":1,"column":503}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":514}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":518}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":193,"column":14},"generated":{"line":1,"column":520}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":193,"column":24},"generated":{"line":1,"column":523}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":194,"column":34},"generated":{"line":1,"column":525}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":194,"column":14},"generated":{"line":1,"column":533}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":194,"column":14},"generated":{"line":1,"column":535}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":194,"column":26},"generated":{"line":1,"column":537}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":194,"column":34},"generated":{"line":1,"column":553}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":194,"column":34},"generated":{"line":1,"column":557}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":194,"column":34},"generated":{"line":1,"column":560}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":194,"column":34},"generated":{"line":1,"column":562}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":194,"column":14},"generated":{"line":1,"column":567}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":195,"column":14},"generated":{"line":1,"column":570}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":195,"column":25},"generated":{"line":1,"column":572}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":197,"column":12},"generated":{"line":1,"column":584}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":197,"column":13},"generated":{"line":1,"column":593}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":596}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":600}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":198,"column":14},"generated":{"line":1,"column":602}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":198,"column":24},"generated":{"line":1,"column":605}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":199,"column":31},"generated":{"line":1,"column":607}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":199,"column":14},"generated":{"line":1,"column":615}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":199,"column":14},"generated":{"line":1,"column":617}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":199,"column":26},"generated":{"line":1,"column":619}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":199,"column":31},"generated":{"line":1,"column":632}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":199,"column":31},"generated":{"line":1,"column":636}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":199,"column":31},"generated":{"line":1,"column":639}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":199,"column":31},"generated":{"line":1,"column":641}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":199,"column":14},"generated":{"line":1,"column":646}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":199,"column":34},"generated":{"line":1,"column":648}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":200,"column":14},"generated":{"line":1,"column":651}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":200,"column":25},"generated":{"line":1,"column":653}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":200,"column":31},"generated":{"line":1,"column":659}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":202,"column":12},"generated":{"line":1,"column":663}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":674}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":678}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":215,"column":1},"generated":{"line":1,"column":680}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":203,"column":18},"generated":{"line":1,"column":682}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":204,"column":39},"generated":{"line":1,"column":686}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":204,"column":16},"generated":{"line":1,"column":694}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":204,"column":16},"generated":{"line":1,"column":696}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":204,"column":28},"generated":{"line":1,"column":698}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":204,"column":39},"generated":{"line":1,"column":717}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":204,"column":39},"generated":{"line":1,"column":721}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":204,"column":39},"generated":{"line":1,"column":724}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":204,"column":39},"generated":{"line":1,"column":726}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":204,"column":16},"generated":{"line":1,"column":731}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":206,"column":34},"generated":{"line":1,"column":735}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":206,"column":14},"generated":{"line":1,"column":743}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":206,"column":14},"generated":{"line":1,"column":745}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":206,"column":26},"generated":{"line":1,"column":747}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":206,"column":34},"generated":{"line":1,"column":763}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":206,"column":34},"generated":{"line":1,"column":767}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":206,"column":34},"generated":{"line":1,"column":770}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":206,"column":34},"generated":{"line":1,"column":772}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":206,"column":14},"generated":{"line":1,"column":777}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":214,"column":6},"generated":{"line":1,"column":785}},{"source":"../../../../src/internal/operators/tap.ts","name":null,"original":{"line":181,"column":2},"generated":{"line":1,"column":787}}],"sources":{"../../../../src/internal/operators/tap.ts":"import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n"},"lineCount":null}},"error":null,"hash":"f13ab8218d759d32ff69224b6b916ee7","cacheData":{"env":{}}}