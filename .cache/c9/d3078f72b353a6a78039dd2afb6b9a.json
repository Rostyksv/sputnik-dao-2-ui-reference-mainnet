{"id":"N8Yl","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/map.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/map.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/map.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":41},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/map.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.map=t;var e=require(\"../util/lift\"),r=require(\"./OperatorSubscriber\");function t(t,u){return(0,e.operate)(function(e,i){var c=0;e.subscribe((0,r.createOperatorSubscriber)(i,function(e){i.next(t.call(u,e,c++))}))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":1,"column":80}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":82}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":112}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":114}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":122}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":1,"column":146}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":16},"generated":{"line":1,"column":155}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":26},"generated":{"line":1,"column":157}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":67},"generated":{"line":1,"column":159}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":1,"column":162}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":1,"column":169}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":1,"column":171}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":1,"column":173}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":1,"column":182}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":26},"generated":{"line":1,"column":193}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":51,"column":8},"generated":{"line":1,"column":196}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":51,"column":8},"generated":{"line":1,"column":200}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":51,"column":16},"generated":{"line":1,"column":202}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":1,"column":204}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":54,"column":11},"generated":{"line":1,"column":206}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":1,"column":217}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":31},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":31},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":31},"generated":{"line":1,"column":247}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":43},"generated":{"line":1,"column":249}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":44},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":1,"column":261}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":19},"generated":{"line":1,"column":263}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":24},"generated":{"line":1,"column":268}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":32},"generated":{"line":1,"column":270}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":37},"generated":{"line":1,"column":275}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":46},"generated":{"line":1,"column":277}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":53},"generated":{"line":1,"column":279}}],"sources":{"../../../../src/internal/operators/map.ts":"import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"cae1101cce1ca7dbbfd38553bbaf4742","cacheData":{"env":{}}}