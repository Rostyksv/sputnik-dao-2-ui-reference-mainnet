{"id":"RJoj","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/shareReplay.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"../ReplaySubject","loc":{"line":1,"column":30},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/ReplaySubject.js"},{"name":"./share","loc":{"line":2,"column":22},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/share.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shareReplay=t;var e=require(\"../ReplaySubject\"),r=require(\"./share\");function t(t,o,n){var u,i,s,c,a=!1;return t&&\"object\"==typeof t?(u=t.bufferSize,c=void 0===u?1/0:u,i=t.windowTime,o=void 0===i?1/0:i,a=void 0!==(s=t.refCount)&&s,n=t.scheduler):c=null!=t?t:1/0,(0,r.share)({connector:function(){return new e.ReplaySubject(c,o,n)},resetOnError:!0,resetOnComplete:!1,resetOnRefCountZero:a})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":104}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":124}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":126}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":134}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":155,"column":6},"generated":{"line":1,"column":145}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":155,"column":16},"generated":{"line":1,"column":154}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":156,"column":2},"generated":{"line":1,"column":156}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":157,"column":2},"generated":{"line":1,"column":158}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":158,"column":2},"generated":{"line":1,"column":160}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":163}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":167}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":169}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":173,"column":1},"generated":{"line":1,"column":171}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":160,"column":6},"generated":{"line":1,"column":173}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":161,"column":6},"generated":{"line":1,"column":175}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":161,"column":17},"generated":{"line":1,"column":178}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":167,"column":9},"generated":{"line":1,"column":180}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":162,"column":6},"generated":{"line":1,"column":187}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":162,"column":58},"generated":{"line":1,"column":190}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":162,"column":35},"generated":{"line":1,"column":207}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":7},"generated":{"line":1,"column":210}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":85},"generated":{"line":1,"column":212}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":103},"generated":{"line":1,"column":214}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":7},"generated":{"line":1,"column":225}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":17},"generated":{"line":1,"column":232}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":17},"generated":{"line":1,"column":236}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":20},"generated":{"line":1,"column":238}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":20},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":28},"generated":{"line":1,"column":242}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":30},"generated":{"line":1,"column":244}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":85},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":103},"generated":{"line":1,"column":248}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":30},"generated":{"line":1,"column":259}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":40},"generated":{"line":1,"column":266}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":40},"generated":{"line":1,"column":270}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":43},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":43},"generated":{"line":1,"column":274}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":51},"generated":{"line":1,"column":276}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":53},"generated":{"line":1,"column":278}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":61},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":53},"generated":{"line":1,"column":290}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":85},"generated":{"line":1,"column":292}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":103},"generated":{"line":1,"column":294}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":69},"generated":{"line":1,"column":305}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":71},"generated":{"line":1,"column":307}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":85},"generated":{"line":1,"column":309}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":163,"column":103},"generated":{"line":1,"column":311}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":165,"column":4},"generated":{"line":1,"column":322}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":165,"column":18},"generated":{"line":1,"column":324}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":165,"column":18},"generated":{"line":1,"column":330}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":165,"column":18},"generated":{"line":1,"column":332}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":165,"column":40},"generated":{"line":1,"column":334}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":165,"column":40},"generated":{"line":1,"column":336}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":167,"column":9},"generated":{"line":1,"column":339}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":167,"column":18},"generated":{"line":1,"column":341}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":167,"column":18},"generated":{"line":1,"column":343}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":167,"column":18},"generated":{"line":1,"column":350}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":168,"column":4},"generated":{"line":1,"column":351}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":168,"column":15},"generated":{"line":1,"column":361}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":168,"column":21},"generated":{"line":1,"column":372}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":168,"column":21},"generated":{"line":1,"column":379}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":168,"column":25},"generated":{"line":1,"column":383}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":168,"column":21},"generated":{"line":1,"column":385}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":168,"column":39},"generated":{"line":1,"column":399}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":168,"column":51},"generated":{"line":1,"column":401}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":168,"column":63},"generated":{"line":1,"column":403}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":169,"column":4},"generated":{"line":1,"column":407}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":169,"column":18},"generated":{"line":1,"column":421}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":170,"column":4},"generated":{"line":1,"column":423}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":170,"column":21},"generated":{"line":1,"column":440}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":171,"column":4},"generated":{"line":1,"column":442}},{"source":"../../../../src/internal/operators/shareReplay.ts","name":null,"original":{"line":171,"column":25},"generated":{"line":1,"column":462}}],"sources":{"../../../../src/internal/operators/shareReplay.ts":"import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"c394c5eea024abf133d4af90fd61c269","cacheData":{"env":{}}}