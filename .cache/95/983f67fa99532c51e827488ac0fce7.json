{"id":"J2D0","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/switchMap.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/switchMap.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"../observable/innerFrom","loc":{"line":1,"column":26},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/switchMap.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"},{"name":"../util/lift","loc":{"line":2,"column":24},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/switchMap.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/lift.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":41},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/switchMap.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.switchMap=t;var r=require(\"../observable/innerFrom\"),e=require(\"../util/lift\"),n=require(\"./OperatorSubscriber\");function t(t,u){return(0,e.operate)(function(e,i){var c=null,o=0,s=!1,b=function(){return s&&!c&&i.complete()};e.subscribe((0,n.createOperatorSubscriber)(i,function(e){null==c||c.unsubscribe();var s=0,a=o++;(0,r.innerFrom)(t(e,a)).subscribe(c=(0,n.createOperatorSubscriber)(i,function(r){return i.next(u?u(e,r,a,s++):r)},function(){c=null,b()}))},function(){s=!0,b()}))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":133,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":129}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":131}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":139}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":155}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":157}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":165}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":86,"column":6},"generated":{"line":1,"column":189}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":86,"column":16},"generated":{"line":1,"column":198}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":1,"column":200}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":88,"column":2},"generated":{"line":1,"column":202}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":1,"column":205}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":90,"column":9},"generated":{"line":1,"column":212}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":90,"column":17},"generated":{"line":1,"column":214}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":90,"column":17},"generated":{"line":1,"column":216}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":90,"column":17},"generated":{"line":1,"column":225}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":90,"column":18},"generated":{"line":1,"column":234}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":90,"column":26},"generated":{"line":1,"column":236}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":91,"column":8},"generated":{"line":1,"column":239}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":91,"column":8},"generated":{"line":1,"column":243}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":91,"column":65},"generated":{"line":1,"column":245}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":1,"column":250}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":92,"column":16},"generated":{"line":1,"column":252}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":94,"column":8},"generated":{"line":1,"column":254}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":94,"column":21},"generated":{"line":1,"column":257}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":98,"column":10},"generated":{"line":1,"column":259}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":98,"column":26},"generated":{"line":1,"column":261}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":98,"column":32},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":98,"column":32},"generated":{"line":1,"column":279}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":98,"column":47},"generated":{"line":1,"column":283}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":98,"column":66},"generated":{"line":1,"column":286}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":98,"column":77},"generated":{"line":1,"column":288}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":100,"column":4},"generated":{"line":1,"column":300}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":100,"column":11},"generated":{"line":1,"column":302}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":101,"column":6},"generated":{"line":1,"column":313}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":102,"column":8},"generated":{"line":1,"column":315}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":102,"column":8},"generated":{"line":1,"column":317}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":102,"column":8},"generated":{"line":1,"column":343}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":103,"column":8},"generated":{"line":1,"column":345}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":103,"column":9},"generated":{"line":1,"column":354}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":105,"column":10},"generated":{"line":1,"column":357}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":105,"column":10},"generated":{"line":1,"column":363}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":105,"column":10},"generated":{"line":1,"column":366}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":105,"column":27},"generated":{"line":1,"column":368}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":106,"column":14},"generated":{"line":1,"column":382}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":106,"column":14},"generated":{"line":1,"column":386}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":106,"column":27},"generated":{"line":1,"column":388}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":107,"column":16},"generated":{"line":1,"column":390}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":107,"column":29},"generated":{"line":1,"column":392}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":109,"column":20},"generated":{"line":1,"column":397}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":109,"column":20},"generated":{"line":1,"column":399}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":109,"column":20},"generated":{"line":1,"column":401}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":109,"column":20},"generated":{"line":1,"column":412}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":109,"column":28},"generated":{"line":1,"column":414}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":109,"column":35},"generated":{"line":1,"column":416}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":109,"column":48},"generated":{"line":1,"column":420}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":110,"column":13},"generated":{"line":1,"column":430}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":110,"column":31},"generated":{"line":1,"column":433}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":111,"column":14},"generated":{"line":1,"column":435}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":111,"column":14},"generated":{"line":1,"column":437}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":111,"column":14},"generated":{"line":1,"column":463}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":14},"generated":{"line":1,"column":465}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":15},"generated":{"line":1,"column":474}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":30},"generated":{"line":1,"column":477}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":30},"generated":{"line":1,"column":484}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":41},"generated":{"line":1,"column":486}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":46},"generated":{"line":1,"column":491}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":63},"generated":{"line":1,"column":493}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":78},"generated":{"line":1,"column":495}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":85},"generated":{"line":1,"column":497}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":97},"generated":{"line":1,"column":499}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":109},"generated":{"line":1,"column":501}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":115,"column":125},"generated":{"line":1,"column":506}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":116,"column":14},"generated":{"line":1,"column":510}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":120,"column":16},"generated":{"line":1,"column":521}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":120,"column":34},"generated":{"line":1,"column":523}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":121,"column":16},"generated":{"line":1,"column":528}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":126,"column":8},"generated":{"line":1,"column":536}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":127,"column":10},"generated":{"line":1,"column":547}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":127,"column":23},"generated":{"line":1,"column":550}},{"source":"../../../../src/internal/operators/switchMap.ts","name":null,"original":{"line":128,"column":10},"generated":{"line":1,"column":552}}],"sources":{"../../../../src/internal/operators/switchMap.ts":"import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"7eb5a5cd07c246b942403dd9d1be822c","cacheData":{"env":{}}}