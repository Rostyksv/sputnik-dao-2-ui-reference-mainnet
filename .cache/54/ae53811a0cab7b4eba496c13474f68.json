{"id":"EAff","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/mergeInternals.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"../observable/innerFrom","loc":{"line":1,"column":26},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"},{"name":"../util/executeSchedule","loc":{"line":2,"column":32},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":41},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.mergeInternals=t;var e=require(\"../observable/innerFrom\"),r=require(\"../util/executeSchedule\"),n=require(\"./OperatorSubscriber\");function t(t,u,c,i,o,s,f,a){var l=[],b=0,p=0,v=!1,h=function(){!v||l.length||b||u.complete()},x=function(e){return b<i?d(e):l.push(e)},d=function(t){s&&u.next(t),b++;var a=!1;(0,e.innerFrom)(c(t,p++)).subscribe((0,n.createOperatorSubscriber)(u,function(e){null==o||o(e),s?x(e):u.next(e)},function(){a=!0},void 0,function(){if(a)try{b--;for(var e=function(){var e=l.shift();f?(0,r.executeSchedule)(u,f,function(){return d(e)}):d(e)};l.length&&b<i;)e();h()}catch(n){u.error(n)}}))};return t.subscribe((0,n.createOperatorSubscriber)(u,x,function(){v=!0,h()})),function(){null==a||a()}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":91}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":97}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":99}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":107}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":134}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":136}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":144}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":171}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":173}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":181}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":205}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":1,"column":214}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":216}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":218}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":220}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":222}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":224}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":1,"column":226}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":1,"column":228}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":1,"column":230}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":32,"column":8},"generated":{"line":1,"column":233}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":32,"column":8},"generated":{"line":1,"column":237}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":32,"column":22},"generated":{"line":1,"column":239}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":34,"column":6},"generated":{"line":1,"column":242}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":34,"column":15},"generated":{"line":1,"column":244}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":36,"column":14},"generated":{"line":1,"column":248}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":1,"column":250}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":1,"column":253}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":43,"column":8},"generated":{"line":1,"column":255}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":43,"column":24},"generated":{"line":1,"column":257}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":47,"column":8},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":47,"column":23},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":47,"column":30},"generated":{"line":1,"column":274}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":47,"column":41},"generated":{"line":1,"column":282}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":48,"column":17},"generated":{"line":1,"column":287}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":1,"column":299}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":20},"generated":{"line":1,"column":301}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":21},"generated":{"line":1,"column":310}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":35},"generated":{"line":1,"column":313}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":35},"generated":{"line":1,"column":320}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":44},"generated":{"line":1,"column":322}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":57},"generated":{"line":1,"column":324}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":68},"generated":{"line":1,"column":326}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":77},"generated":{"line":1,"column":329}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":84},"generated":{"line":1,"column":331}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":53,"column":89},"generated":{"line":1,"column":336}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":55,"column":8},"generated":{"line":1,"column":340}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":55,"column":21},"generated":{"line":1,"column":342}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":55,"column":22},"generated":{"line":1,"column":351}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":1,"column":354}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":59,"column":14},"generated":{"line":1,"column":357}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":59,"column":25},"generated":{"line":1,"column":359}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":59,"column":30},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":1,"column":367}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":68,"column":8},"generated":{"line":1,"column":371}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":68,"column":8},"generated":{"line":1,"column":375}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":68,"column":24},"generated":{"line":1,"column":378}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":1,"column":381}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":1,"column":383}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":1,"column":385}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":1,"column":396}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":71,"column":22},"generated":{"line":1,"column":398}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":71,"column":29},"generated":{"line":1,"column":400}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":71,"column":39},"generated":{"line":1,"column":406}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":1,"column":417}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":1,"column":419}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":1,"column":421}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":1,"column":447}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":74,"column":8},"generated":{"line":1,"column":449}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":74,"column":9},"generated":{"line":1,"column":458}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":77,"column":10},"generated":{"line":1,"column":461}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":77,"column":10},"generated":{"line":1,"column":467}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":77,"column":10},"generated":{"line":1,"column":470}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":77,"column":25},"generated":{"line":1,"column":472}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":79,"column":14},"generated":{"line":1,"column":475}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":82,"column":12},"generated":{"line":1,"column":477}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":82,"column":22},"generated":{"line":1,"column":479}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":85,"column":12},"generated":{"line":1,"column":482}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":85,"column":23},"generated":{"line":1,"column":484}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":85,"column":28},"generated":{"line":1,"column":489}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":88,"column":8},"generated":{"line":1,"column":493}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":91,"column":10},"generated":{"line":1,"column":504}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":91,"column":26},"generated":{"line":1,"column":507}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":94,"column":8},"generated":{"line":1,"column":515}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":1,"column":517}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":99,"column":14},"generated":{"line":1,"column":528}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":99,"column":14},"generated":{"line":1,"column":531}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":104,"column":16},"generated":{"line":1,"column":533}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":108,"column":14},"generated":{"line":1,"column":537}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":113,"column":21},"generated":{"line":1,"column":541}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":545}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":549}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":551}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":114,"column":22},"generated":{"line":1,"column":562}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":114,"column":22},"generated":{"line":1,"column":566}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":114,"column":38},"generated":{"line":1,"column":568}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":114,"column":45},"generated":{"line":1,"column":570}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":118,"column":20},"generated":{"line":1,"column":578}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":119,"column":34},"generated":{"line":1,"column":581}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":119,"column":34},"generated":{"line":1,"column":583}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":119,"column":34},"generated":{"line":1,"column":585}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":119,"column":34},"generated":{"line":1,"column":602}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":119,"column":46},"generated":{"line":1,"column":604}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":119,"column":65},"generated":{"line":1,"column":606}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":119,"column":71},"generated":{"line":1,"column":617}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":119,"column":71},"generated":{"line":1,"column":624}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":119,"column":82},"generated":{"line":1,"column":626}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":121,"column":18},"generated":{"line":1,"column":631}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":121,"column":29},"generated":{"line":1,"column":633}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":113,"column":21},"generated":{"line":1,"column":637}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":113,"column":28},"generated":{"line":1,"column":639}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":113,"column":38},"generated":{"line":1,"column":647}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":113,"column":47},"generated":{"line":1,"column":649}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":149,"column":1},"generated":{"line":1,"column":652}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":125,"column":14},"generated":{"line":1,"column":656}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":126,"column":14},"generated":{"line":1,"column":660}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":126,"column":21},"generated":{"line":1,"column":666}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":127,"column":14},"generated":{"line":1,"column":669}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":127,"column":25},"generated":{"line":1,"column":671}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":127,"column":31},"generated":{"line":1,"column":677}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":146,"column":9},"generated":{"line":1,"column":685}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":136,"column":2},"generated":{"line":1,"column":692}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":136,"column":9},"generated":{"line":1,"column":694}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":137,"column":4},"generated":{"line":1,"column":705}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":137,"column":29},"generated":{"line":1,"column":707}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":137,"column":29},"generated":{"line":1,"column":709}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":137,"column":29},"generated":{"line":1,"column":735}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":137,"column":41},"generated":{"line":1,"column":737}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":137,"column":52},"generated":{"line":1,"column":739}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":139,"column":6},"generated":{"line":1,"column":750}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":139,"column":19},"generated":{"line":1,"column":753}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":140,"column":6},"generated":{"line":1,"column":755}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":146,"column":9},"generated":{"line":1,"column":762}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":147,"column":4},"generated":{"line":1,"column":773}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":147,"column":4},"generated":{"line":1,"column":779}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":147,"column":4},"generated":{"line":1,"column":782}}],"sources":{"../../../../src/internal/operators/mergeInternals.ts":"import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"ba6b7211cd6d3c079296aa7d3d1b31ce","cacheData":{"env":{}}}