{"id":"fivK","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/retryWhen.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/retryWhen.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"../observable/innerFrom","loc":{"line":1,"column":26},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/retryWhen.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"},{"name":"../Subject","loc":{"line":2,"column":24},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/retryWhen.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/Subject.js"},{"name":"../util/lift","loc":{"line":3,"column":24},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/retryWhen.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/lift.js"},{"name":"./OperatorSubscriber","loc":{"line":4,"column":41},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/retryWhen.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.retryWhen=i;var e=require(\"../observable/innerFrom\"),r=require(\"../Subject\"),t=require(\"../util/lift\"),u=require(\"./OperatorSubscriber\");function i(i){return(0,t.operate)(function(t,n){var o,b,c=!1,s=function(){o=t.subscribe((0,u.createOperatorSubscriber)(n,void 0,void 0,function(t){b||(b=new r.Subject,(0,e.innerFrom)(i(b)).subscribe((0,u.createOperatorSubscriber)(n,function(){return o?s():c=!0}))),b&&b.next(t)})),c&&(o.unsubscribe(),o=null,c=!1,s())};s()})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":113,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":129}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":131}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":139}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":153}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":155}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":163}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":179}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":181}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":189}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":67,"column":6},"generated":{"line":1,"column":213}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":67,"column":16},"generated":{"line":1,"column":222}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":67,"column":29},"generated":{"line":1,"column":224}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":68,"column":9},"generated":{"line":1,"column":227}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":68,"column":9},"generated":{"line":1,"column":234}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":68,"column":17},"generated":{"line":1,"column":236}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":68,"column":17},"generated":{"line":1,"column":238}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":68,"column":17},"generated":{"line":1,"column":247}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":68,"column":18},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":1,"column":261}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":1,"column":265}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":71,"column":8},"generated":{"line":1,"column":267}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":70,"column":8},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":70,"column":20},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":73,"column":10},"generated":{"line":1,"column":274}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":73,"column":34},"generated":{"line":1,"column":276}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":1,"column":287}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":74,"column":17},"generated":{"line":1,"column":289}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":74,"column":24},"generated":{"line":1,"column":291}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":75,"column":8},"generated":{"line":1,"column":302}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":75,"column":33},"generated":{"line":1,"column":304}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":75,"column":33},"generated":{"line":1,"column":306}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":75,"column":33},"generated":{"line":1,"column":332}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":75,"column":45},"generated":{"line":1,"column":339}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":75,"column":56},"generated":{"line":1,"column":346}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":75,"column":67},"generated":{"line":1,"column":348}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":75,"column":68},"generated":{"line":1,"column":357}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":76,"column":15},"generated":{"line":1,"column":360}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":77,"column":12},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":77,"column":22},"generated":{"line":1,"column":366}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":77,"column":26},"generated":{"line":1,"column":370}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":77,"column":22},"generated":{"line":1,"column":372}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":78,"column":22},"generated":{"line":1,"column":381}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":78,"column":22},"generated":{"line":1,"column":383}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":78,"column":22},"generated":{"line":1,"column":385}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":78,"column":22},"generated":{"line":1,"column":396}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":78,"column":31},"generated":{"line":1,"column":398}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":78,"column":41},"generated":{"line":1,"column":402}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":79,"column":14},"generated":{"line":1,"column":413}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":79,"column":39},"generated":{"line":1,"column":415}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":79,"column":39},"generated":{"line":1,"column":417}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":79,"column":39},"generated":{"line":1,"column":443}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":79,"column":51},"generated":{"line":1,"column":445}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":85,"column":16},"generated":{"line":1,"column":456}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":85,"column":16},"generated":{"line":1,"column":463}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":85,"column":27},"generated":{"line":1,"column":465}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":85,"column":54},"generated":{"line":1,"column":469}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":85,"column":66},"generated":{"line":1,"column":472}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":89,"column":14},"generated":{"line":1,"column":478}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":91,"column":12},"generated":{"line":1,"column":481}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":91,"column":20},"generated":{"line":1,"column":483}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":91,"column":25},"generated":{"line":1,"column":488}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":96,"column":10},"generated":{"line":1,"column":494}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":101,"column":8},"generated":{"line":1,"column":498}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":101,"column":17},"generated":{"line":1,"column":500}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":102,"column":8},"generated":{"line":1,"column":514}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":102,"column":19},"generated":{"line":1,"column":516}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":104,"column":8},"generated":{"line":1,"column":521}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":104,"column":20},"generated":{"line":1,"column":524}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":106,"column":8},"generated":{"line":1,"column":526}},{"source":"../../../../src/internal/operators/retryWhen.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":1,"column":532}}],"sources":{"../../../../src/internal/operators/retryWhen.ts":"import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the `ObservableInput` returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * Retry an observable sequence on error based on custom criteria.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, retryWhen, tap, delayWhen, timer } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   map(value => {\n *     if (value > 5) {\n *       // error will be picked up by retryWhen\n *       throw value;\n *     }\n *     return value;\n *   }),\n *   retryWhen(errors =>\n *     errors.pipe(\n *       // log error message\n *       tap(value => console.log(`Value ${ value } was too high!`)),\n *       // restart in 5 seconds\n *       delayWhen(value => timer(value * 1000))\n *     )\n *   )\n * );\n *\n * result.subscribe(value => console.log(value));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 'Value 6 was too high!'\n * // - Wait 5 seconds then repeat\n * ```\n *\n * @see {@link retry}\n *\n * @param notifier Function that receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of an `error`.\n * @deprecated Will be removed in v9 or v10, use {@link retry}'s `delay` option instead.\n * Will be removed in v9 or v10. Use {@link retry}'s {@link RetryConfig#delay delay} option instead.\n * Instead of `retryWhen(() => notify$)`, use: `retry({ delay: () => notify$ })`.\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let errors$: Subject<any>;\n\n    const subscribeForRetryWhen = () => {\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n          if (!errors$) {\n            errors$ = new Subject();\n            innerFrom(notifier(errors$)).subscribe(\n              createOperatorSubscriber(subscriber, () =>\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\n              )\n            );\n          }\n          if (errors$) {\n            // We have set up the notifier without error.\n            errors$.next(err);\n          }\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flag.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRetryWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRetryWhen();\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"c219d3dfff5896afae3e0c2b43d680c8","cacheData":{"env":{}}}