{"id":"ZY8e","dependencies":[{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/catchError.js.map","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/src/internal/operators/catchError.ts","includedInParent":true,"mtime":1693298556058},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/package.json","includedInParent":true,"mtime":1709230653658},{"name":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/package.json","includedInParent":true,"mtime":1693298556058},{"name":"../observable/innerFrom","loc":{"line":1,"column":26},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/catchError.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":41},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/catchError.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"},{"name":"../util/lift","loc":{"line":3,"column":24},"parent":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/operators/catchError.js","resolved":"/Users/rsvitlak/WebstormProjects/sputnik-dao-2-ui-reference-mainnet/node_modules/rxjs/dist/esm5/internal/util/lift.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.catchError=i;var r=require(\"../observable/innerFrom\"),e=require(\"./OperatorSubscriber\"),u=require(\"../util/lift\");function i(s){return(0,u.operate)(function(u,b){var n,t=null,o=!1;t=u.subscribe((0,e.createOperatorSubscriber)(b,void 0,void 0,function(e){n=(0,r.innerFrom)(s(e,i(s)(u))),t?(t.unsubscribe(),t=null,n.subscribe(b)):o=!0})),o&&(t.unsubscribe(),t=null,n.subscribe(b))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":141,"column":1},"generated":{"line":1,"column":87}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":89}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":95}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":103}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":130}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":132}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":140}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":164}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":166}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":1,"column":174}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":107,"column":6},"generated":{"line":1,"column":190}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":107,"column":16},"generated":{"line":1,"column":199}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":108,"column":2},"generated":{"line":1,"column":201}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":110,"column":9},"generated":{"line":1,"column":204}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":110,"column":9},"generated":{"line":1,"column":211}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":110,"column":17},"generated":{"line":1,"column":213}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":110,"column":17},"generated":{"line":1,"column":215}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":110,"column":17},"generated":{"line":1,"column":224}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":110,"column":18},"generated":{"line":1,"column":233}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":110,"column":26},"generated":{"line":1,"column":235}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":111,"column":8},"generated":{"line":1,"column":238}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":113,"column":8},"generated":{"line":1,"column":242}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":111,"column":8},"generated":{"line":1,"column":244}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":111,"column":40},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":112,"column":8},"generated":{"line":1,"column":251}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":112,"column":20},"generated":{"line":1,"column":254}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":115,"column":4},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":115,"column":15},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":115,"column":22},"generated":{"line":1,"column":260}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":116,"column":6},"generated":{"line":1,"column":271}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":116,"column":31},"generated":{"line":1,"column":273}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":116,"column":31},"generated":{"line":1,"column":275}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":116,"column":31},"generated":{"line":1,"column":301}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":116,"column":43},"generated":{"line":1,"column":308}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":116,"column":54},"generated":{"line":1,"column":315}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":116,"column":65},"generated":{"line":1,"column":317}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":116,"column":66},"generated":{"line":1,"column":326}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":117,"column":8},"generated":{"line":1,"column":329}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":117,"column":24},"generated":{"line":1,"column":332}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":117,"column":34},"generated":{"line":1,"column":334}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":117,"column":34},"generated":{"line":1,"column":336}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":117,"column":34},"generated":{"line":1,"column":347}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":117,"column":43},"generated":{"line":1,"column":349}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":117,"column":48},"generated":{"line":1,"column":351}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":117,"column":59},"generated":{"line":1,"column":353}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":117,"column":48},"generated":{"line":1,"column":355}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":117,"column":69},"generated":{"line":1,"column":356}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":118,"column":12},"generated":{"line":1,"column":361}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":119,"column":10},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":119,"column":19},"generated":{"line":1,"column":366}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":120,"column":10},"generated":{"line":1,"column":380}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":120,"column":21},"generated":{"line":1,"column":382}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":121,"column":10},"generated":{"line":1,"column":387}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":121,"column":24},"generated":{"line":1,"column":389}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":121,"column":34},"generated":{"line":1,"column":399}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":125,"column":10},"generated":{"line":1,"column":403}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":125,"column":22},"generated":{"line":1,"column":406}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":130,"column":8},"generated":{"line":1,"column":411}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":136,"column":6},"generated":{"line":1,"column":415}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":136,"column":15},"generated":{"line":1,"column":417}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":137,"column":6},"generated":{"line":1,"column":431}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":137,"column":17},"generated":{"line":1,"column":433}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":138,"column":6},"generated":{"line":1,"column":438}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":138,"column":21},"generated":{"line":1,"column":440}},{"source":"../../../../src/internal/operators/catchError.ts","name":null,"original":{"line":138,"column":31},"generated":{"line":1,"column":450}}],"sources":{"../../../../src/internal/operators/catchError.ts":"import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"59b70a842383f92c329f15bd0c7b5310","cacheData":{"env":{}}}